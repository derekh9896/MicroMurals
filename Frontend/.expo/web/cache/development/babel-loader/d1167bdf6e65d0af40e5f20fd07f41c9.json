{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  function loginHandler() {\n    if (email == \"JohnDoe\" && password == \"agoodpassword\") {\n      navigation.navigate('Home', {\n        username: 'JohnDoe',\n        email: 'JohnDoe@gmail.com'\n      });\n    } else if (email == \"iGEMRocks\" && password == \"agoodpassword\") {\n      navigation.navigate('Home', {\n        username: 'iGEMRocks',\n        email: 'iGEMRocks@gmail.com'\n      });\n    } else if (navigation.getParam('username') != null && email == navigation.getParam('username') && password == navigation.getParam('password')) {\n      navigation.navigate('Home', {\n        username: navigation.getParam('username'),\n        email: navigation.getParam('email')\n      });\n    }\n  }\n  var registerHandler = function registerHandler() {\n    navigation.navigate('Register');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ImageBackground, {\n      source: require(\"../assets/LoginScreen.png\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsxs(View, {\n        style: styles.loginContainer,\n        children: [_jsx(TextInput, {\n          style: styles.inputUser,\n          onChangeText: function onChangeText(email) {\n            return setEmail(email);\n          },\n          placeholder: \"Username\",\n          placeholderTextColor: \"#a9a9a9\"\n        }), _jsx(TextInput, {\n          style: styles.inputPass,\n          onChangeText: function onChangeText(password) {\n            return setPassword(password);\n          },\n          placeholder: \"Password\",\n          placeholderTextColor: \"#a9a9a9\",\n          secureTextEntry: true\n        })]\n      })\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: loginHandler,\n      children: _jsx(View, {\n        style: styles.loginButton,\n        children: _jsx(Text, {\n          children: \"  \"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: registerHandler,\n      children: _jsx(View, {\n        style: styles.registerButton,\n        children: _jsx(Text, {\n          style: styles.registerStyle,\n          children: \"Register\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loginContainer: {\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  inputUser: {\n    position: 'absolute',\n    left: -75,\n    top: -77,\n    fontSize: 30,\n    width: 190,\n    maxWidth: 190\n  },\n  inputPass: {\n    position: 'absolute',\n    left: -75,\n    top: 29,\n    fontSize: 30,\n    width: 190,\n    maxWidth: 190\n  },\n  loginButton: {\n    position: 'absolute',\n    bottom: '21.2%',\n    left: '16%',\n    height: 60,\n    width: 270,\n    color: '#CCCCCC',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  registerButton: {\n    position: 'absolute',\n    bottom: 160,\n    left: '41%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  registerStyle: {\n    color: '#BC4325',\n    fontSize: 18\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","Login","navigation","email","setEmail","password","setPassword","loginHandler","navigate","username","getParam","registerHandler","styles","container","require","image","loginContainer","inputUser","inputPass","loginButton","registerButton","registerStyle","StyleSheet","create","flex","justifyContent","alignItems","position","left","top","fontSize","width","maxWidth","bottom","height","color"],"sources":["C:/Users/derek/Desktop/iGEMApp/Frontend/app/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, ImageBackground, View, TextInput, TouchableWithoutFeedback, TouchableOpacity } from 'react-native';\r\n\r\n\r\n\r\nfunction Login({navigation}) {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function loginHandler() {\r\n    if (email == \"JohnDoe\" && password == \"agoodpassword\") {\r\n      navigation.navigate('Home', {username: 'JohnDoe', email: 'JohnDoe@gmail.com'});\r\n    }\r\n    else if (email == \"iGEMRocks\" && password == \"agoodpassword\") {\r\n      navigation.navigate('Home', {username: 'iGEMRocks', email: 'iGEMRocks@gmail.com'})\r\n    }\r\n    else if (navigation.getParam('username') != null && email == navigation.getParam('username') && password == navigation.getParam('password')) {\r\n      navigation.navigate('Home', {username: navigation.getParam('username'), email: navigation.getParam('email')})\r\n    }\r\n  }\r\n\r\n  const registerHandler = () => {\r\n    navigation.navigate('Register');\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={require('../assets/LoginScreen.png')} resizeMode=\"cover\" style={styles.image}>\r\n          <View style={styles.loginContainer}>\r\n              <TextInput\r\n              style = {styles.inputUser}\r\n              onChangeText={(email) => setEmail(email)}\r\n              placeholder={\"Username\"}\r\n              placeholderTextColor=\"#a9a9a9\"\r\n            />\r\n            <TextInput\r\n              style = {styles.inputPass}\r\n              onChangeText={(password) => setPassword(password)}\r\n              placeholder={\"Password\"}\r\n              placeholderTextColor=\"#a9a9a9\"\r\n              secureTextEntry={true}\r\n            />\r\n          </View>\r\n      </ImageBackground>\r\n      <TouchableWithoutFeedback onPress={loginHandler}>\r\n        <View style={styles.loginButton}><Text>  </Text></View>\r\n      </TouchableWithoutFeedback>\r\n      <TouchableOpacity onPress={registerHandler}>\r\n        <View style={styles.registerButton}><Text style={styles.registerStyle}>Register</Text></View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n      flex: 1\r\n  },\r\n  image: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n  },\r\n  loginContainer: {\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n  },\r\n  inputUser: {\r\n      position: 'absolute',\r\n      left: -75,\r\n      top: -77,\r\n      fontSize: 30,\r\n      width: 190,\r\n      maxWidth: 190,\r\n  },\r\n  inputPass: {\r\n    position: 'absolute',\r\n    left: -75,\r\n    top: 29,\r\n    fontSize: 30,\r\n    width: 190,\r\n    maxWidth: 190,\r\n  },\r\n  loginButton: {\r\n    position: 'absolute',\r\n    bottom: '21.2%',\r\n    left: '16%',\r\n    height: 60,\r\n    width: 270,\r\n    color: '#CCCCCC',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  registerButton: {\r\n    position: 'absolute',\r\n    bottom: 160,\r\n    left: '41%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  registerStyle: {\r\n    color: '#BC4325',\r\n    fontSize: 18,\r\n  }\r\n})\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}